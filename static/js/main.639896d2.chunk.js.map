{"version":3,"sources":["components/SideDrawer/DrawerToggleButton.js","components/Toolbar/Toolbar.js","components/SideDrawer/SideDrawer.js","components/Backdrop/Backdrop.js","components/Content/Workspaces/Workspaces.js","components/Content/Content.js","App.js","serviceWorker.js","index.js"],"names":["drawerToggleButton","props","className","onClick","click","toolbar","drawerClickHandler","href","sideDrawer","state","isActive","drawerClasses","this","show","setState","Component","backdrop","Workspaces","title","class","style","backgroundColor","focusable","viewBox","aria-hidden","width","height","fill","d","cx","cy","r","Content","App","sideDrawerOpen","drawerToggleClickHandler","prevState","backdropClickHandler","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.639896d2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './DrawerToggleButton.css';\r\n\r\nconst drawerToggleButton = props => (\r\n    <button className=\"toggle-button\" onClick={props.click}>\r\n        <div className=\"toggle-button__line\" />\r\n        <div className=\"toggle-button__line\" />\r\n        <div className=\"toggle-button__line\" />\r\n    </button>\r\n);\r\n\r\nexport default drawerToggleButton;","import React from 'react';\r\n\r\nimport DrawerToggleButton from '../SideDrawer/DrawerToggleButton';\r\nimport './Toolbar.css';\r\n\r\nconst toolbar = props => (\r\n  <header className=\"toolbar\">\r\n    <nav className=\"toolbar__navigation\">\r\n        <div className=\"toolbar__toggle-button\">\r\n            <DrawerToggleButton click={props.drawerClickHandler} />\r\n        </div>\r\n        <div className=\"toolbar__logo\"><a href=\"/\">THE LOGO</a></div>\r\n        <div className=\"spacer\" />\r\n        <div className=\"toolbar_navigation-items\">\r\n            <ul>\r\n                <li><a href=\"/\">🔍</a></li>\r\n                <li><a href=\"/\">✈</a></li>\r\n                <li><a href=\"/\">🔔</a></li>\r\n\r\n\r\n            </ul>\r\n        </div>\r\n    </nav>\r\n  </header>\r\n);\r\n\r\nexport default toolbar;\r\n","import React, { Component } from 'react';\r\nimport './SideDrawer.css';\r\n\r\nclass sideDrawer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n state={\r\n    isActive:false,\r\n  }\r\n\r\n\r\n  render() {\r\n    let drawerClasses = 'side-drawer';\r\n\r\n    if (this.props.show) {\r\n      drawerClasses = 'side-drawer open';\r\n    }\r\n    return (\r\n      <nav className={drawerClasses}>\r\n        <ul>\r\n          <li>\r\n            <a href=\"/\">The LOGO</a>\r\n          </li>\r\n          <hr />\r\n\r\n          <li \r\n              // className={this.state.isActive ? \"\" : \"active\"}          \r\n              onClick={()=>this.setState({isActive: !this.state.isActive})} \r\n              >\r\n            <a href=\"\">🏡 &nbsp; Dashboard</a>\r\n          </li>\r\n          <li \r\n          className={this.state.isActive ? \"\" : \"active\"}          \r\n          onClick={()=>this.setState({isActive: !this.state.isActive})} >\r\n            <a href=\"/\">🚀 &nbsp; Workspaces</a>\r\n          </li>\r\n          <li \r\n          // onClick={this.isActiveHandler} className={this.activeClass} \r\n          >\r\n            <a href=\"/\">🔗 &nbsp; Trackable Links</a>\r\n          </li>\r\n          <hr />\r\n          <hr />\r\n          <li>\r\n            <a href=\"/\">❤ &nbsp; Favorites</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"/\">👁 &nbsp; Recents</a>\r\n          </li>\r\n          <hr />\r\n          <li className=\"spacerr\">\r\n          </li>\r\n          <li className=\"spacerh\">\r\n            <a href=\"/\">Log In !</a>\r\n          </li>\r\n\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nexport default sideDrawer;\r\n\r\n//  const sideDrawer = (props) => {\r\n\r\n//    let drawerClasses = 'side-drawer';\r\n\r\n//    if (props.show) {\r\n//      drawerClasses = 'side-drawer open';\r\n//    }\r\n//     this.state = {\r\n//       isActive: false\r\n//     };\r\n\r\n//    isActiveHandler = () => {\r\n//     this.setState((prevState) => {\r\n//       return {isActive: !prevState.isActive};\r\n//     });\r\n//   };\r\n//   let {isActive}=this.state\r\n//     let activeClass=(this.state.isActive)?\"active\":\"\";\r\n//    return (\r\n\r\n//      <nav className={drawerClasses}>\r\n//        <ul>\r\n//          <li>\r\n//            <a href=\"/\">The LOGO</a>\r\n//          </li>    \r\n//          <hr/>\r\n\r\n//          <li >\r\n//            <a href=\"/\">🏡 Dashboard</a>\r\n//          </li>\r\n//          <li >\r\n//            <a href=\"/\">🚀 Workspaces</a>\r\n//          </li>\r\n//          <li>\r\n//            <a href=\"/\">🔗 Trackable Links</a>\r\n//          </li>\r\n//          <hr/>\r\n//          <hr/>\r\n//          <li>\r\n//            <a href=\"/\">❤ Favorites</a>\r\n//          </li>\r\n//          <li>\r\n//            <a href=\"/\">👁 Recents</a>\r\n//          </li>\r\n//          <hr/>\r\n//          <li className=\"spacerr\">     \r\n//          </li> \r\n//          <li className=\"spacerh\">\r\n//            <a href=\"/\">Log In !</a>\r\n//          </li>\r\n\r\n//        </ul>\r\n//      </nav>\r\n//    );\r\n\r\n//  };\r\n\r\n//  export default sideDrawer;\r\n","import React from 'react';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst backdrop = props => (\r\n    <div className=\"backdrop\" onClick={props.click} />\r\n);\r\n\r\nexport default backdrop;","import React, { Component } from 'react';\r\nimport './Workspaces.css'\r\n\r\nclass Workspaces extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    render() {\r\n        let{title}=this.props;\r\n        return (\r\n        <div class=\"workspace\">\r\n            \r\n            <div class=\"svg-box\">\r\n                <div class=\"svg-box-1 svg-box-2\" style={{ backgroundColor: \"rgb(255, 201, 97)\" }}>\r\n                    <svg class=\"MuiSvgIcon-root\" focusable=\"false\" viewBox=\"0 0 48 48\" aria-hidden=\"true\" width=\"24px\" height=\"24px\">\r\n                        <path fill=\"#FFFFFF99\" d=\"M24.5,11C15.9,11,9,17.9,9,26.5S15.9,42,24.5,42S40,35.1,40,26.5S33.1,11,24.5,11z M24.5,39 C17.6,39,12,33.4,12,26.5S17.6,14,24.5,14S37,19.6,37,26.5S31.4,39,24.5,39z\"></path>\r\n                        <circle fill=\"#FFFFFF\" cx=\"24.5\" cy=\"11.5\" r=\"5.5\"></circle><circle fill=\"#FFFFFF\" cx=\"10.5\" cy=\"33.5\" r=\"5.5\"></circle><circle fill=\"#FFFFFF\" cx=\"37.5\" cy=\"33.5\" r=\"5.5\"></circle>\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n\r\n        <div className=\"workspace-title\">{title}</div>\r\n            </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default Workspaces;","import React, { Component } from 'react';\r\nimport './Content.css'\r\nimport Workspaces from './Workspaces/Workspaces'\r\nclass Content extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"content\">\r\n                <div className=\"topbar\">\r\n                    <div className=\"typography\">Bookmarked Workspaces</div>\r\n                    <div className=\"blue-button\">Create Workspaces</div>\r\n                </div>\r\n                <div className=\"c1\">\r\n                    Your bookmarked workspaces will be displayed here\r\n                </div>\r\n                <div className=\"c2\">\r\n                    All Workspaces\r\n                </div>\r\n                <div className=\"c3\">\r\n                   <Workspaces title=\"workspace 1\"/>\r\n                   <Workspaces title=\"workspace 2\"/>\r\n                   <Workspaces title=\"workspace 3\"/>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Content;\r\n\r\n","import React, { Component } from 'react';\n\nimport Toolbar from './components/Toolbar/Toolbar';\nimport SideDrawer from './components/SideDrawer/SideDrawer';\nimport Backdrop from './components/Backdrop/Backdrop';\nimport Content from './components/Content/Content';\nimport './App.css'\n\n\nclass App extends Component {\n  state = {\n    sideDrawerOpen: false\n  };\n\n  drawerToggleClickHandler = () => {\n    this.setState((prevState) => {\n      return {sideDrawerOpen: !prevState.sideDrawerOpen};\n    });\n  };\n\n  backdropClickHandler = () => {\n    this.setState({sideDrawerOpen: false});\n  };\n\n  render() {\n    let backdrop;\n\n    if (this.state.sideDrawerOpen) {\n      backdrop = <Backdrop click={this.backdropClickHandler} />\n    }\n    return (\n      <div style={{height: '100%'}}>\n        <Toolbar drawerClickHandler={this.drawerToggleClickHandler} />\n\n        <SideDrawer show={this.state.sideDrawerOpen} />\n        {backdrop}\n\n        <main>      \n          <Content/>\n        </main>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}